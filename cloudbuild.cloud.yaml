# Cloud-Only Google Cloud Build configuration for Na Winie
# Optimized for Google Cloud Run deployment without local development support

steps:
  # Validate required substitutions
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "üîç Validating required environment variables..."
        if [ -z "${_PUBLIC_SUPABASE_URL}" ]; then
          echo "‚ùå Error: _PUBLIC_SUPABASE_URL substitution is required"
          exit 1
        fi
        if [ -z "${_PUBLIC_SUPABASE_ANON_KEY}" ]; then
          echo "‚ùå Error: _PUBLIC_SUPABASE_ANON_KEY substitution is required"
          exit 1
        fi
        if [ -z "${_JWT_SECRET_KEY}" ]; then
          echo "‚ùå Error: _JWT_SECRET_KEY substitution is required"
          exit 1
        fi
        if [ -z "${_DATABASE_URL}" ]; then
          echo "‚ùå Error: _DATABASE_URL substitution is required"
          exit 1
        fi
        echo "‚úÖ All required environment variables are set"

  # Build the Docker image with cloud-only configuration
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '--file'
      - 'Dockerfile.cloud'
      - '--build-arg'
      - 'PUBLIC_SUPABASE_URL=${_PUBLIC_SUPABASE_URL}'
      - '--build-arg'
      - 'PUBLIC_SUPABASE_ANON_KEY=${_PUBLIC_SUPABASE_ANON_KEY}'
      - '--build-arg'
      - 'PUBLIC_USE_LOCAL_BACKEND=false'
      - '-t'
      - 'gcr.io/${PROJECT_ID}/nawinie-cloud:${SHORT_SHA}'
      - '-t'
      - 'gcr.io/${PROJECT_ID}/nawinie-cloud:latest'
      - '.'

  # Push the images to Google Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/${PROJECT_ID}/nawinie-cloud:${SHORT_SHA}']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/${PROJECT_ID}/nawinie-cloud:latest']

  # Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'nawinie'
      - '--image'
      - 'gcr.io/${PROJECT_ID}/nawinie-cloud:${SHORT_SHA}'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--memory'
      - '4Gi'
      - '--cpu'
      - '2'
      - '--concurrency'
      - '100'
      - '--timeout'
      - '300'
      - '--port'
      - '8080'
      - '--set-env-vars'
      - 'PORT=8080,ENVIRONMENT=production,JWT_SECRET_KEY=${_JWT_SECRET_KEY},JWT_ALGORITHM=HS256,JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30,PUBLIC_SUPABASE_URL=${_PUBLIC_SUPABASE_URL},PUBLIC_SUPABASE_ANON_KEY=${_PUBLIC_SUPABASE_ANON_KEY},SUPABASE_URL=${_PUBLIC_SUPABASE_URL},SUPABASE_ANON_KEY=${_PUBLIC_SUPABASE_ANON_KEY},SUPABASE_SERVICE_ROLE_KEY=${_SUPABASE_SERVICE_ROLE_KEY},DATABASE_URL=${_DATABASE_URL},PUBLIC_USE_LOCAL_BACKEND=false,CORS_ORIGINS=${_CORS_ORIGINS}'

# Required substitutions for cloud deployment
substitutions:
  _PUBLIC_SUPABASE_URL: 'REQUIRED'  # Set this to your Supabase URL
  _PUBLIC_SUPABASE_ANON_KEY: 'REQUIRED'  # Set this to your Supabase anon key
  _JWT_SECRET_KEY: 'REQUIRED'  # Set this to your JWT secret
  _DATABASE_URL: 'REQUIRED'  # Set this to your database URL
  _SUPABASE_SERVICE_ROLE_KEY: 'REQUIRED'  # Set this to your Supabase service role key
  _REGION: 'us-central1'  # Google Cloud region
  _CORS_ORIGINS: 'https://your-domain.com'  # Your domain for CORS

# Images will be stored in Google Container Registry with cloud suffix
images: 
  - 'gcr.io/${PROJECT_ID}/nawinie-cloud:${SHORT_SHA}'
  - 'gcr.io/${PROJECT_ID}/nawinie-cloud:latest'

# Build options optimized for cloud deployment
options:
  machineType: 'E2_HIGHCPU_8'
  diskSizeGb: 50
  logging: CLOUD_LOGGING_ONLY
  
# Cloud Build timeout
timeout: '1200s'  # 20 minutes 
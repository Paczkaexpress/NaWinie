apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: nawinie
  annotations:
    run.googleapis.com/ingress: all
    run.googleapis.com/execution-environment: gen2
spec:
  template:
    metadata:
      annotations:
        run.googleapis.com/cpu-boost: true
        run.googleapis.com/execution-environment: gen2
        run.googleapis.com/startup-cpu-boost: true
    spec:
      containerConcurrency: 100
      timeoutSeconds: 300
      containers:
      - image: gcr.io/YOUR_PROJECT_ID/nawinie:latest
        ports:
        - name: http1
          containerPort: 8080
        env:
        # Cloud Run Configuration
        - name: PORT
          value: "8080"
        
        # JWT Configuration
        - name: JWT_SECRET_KEY
          value: "your-jwt-secret-key-use-secret-manager-in-production"
        - name: JWT_ALGORITHM
          value: "HS256"
        - name: JWT_ACCESS_TOKEN_EXPIRE_MINUTES
          value: "30"
        
        # Supabase Configuration
        - name: PUBLIC_SUPABASE_URL
          value: "https://your-project-id.supabase.co"
        - name: PUBLIC_SUPABASE_ANON_KEY
          value: "your-supabase-anon-key"
        - name: SUPABASE_URL
          value: "https://your-project-id.supabase.co"
        - name: SUPABASE_ANON_KEY
          value: "your-supabase-anon-key"
        - name: SUPABASE_SERVICE_ROLE_KEY
          value: "your-supabase-service-role-key"
        
        # Database Configuration
        - name: DATABASE_URL
          value: "postgresql://postgres:password@host:5432/database"
        
        # Application Configuration
        - name: ENVIRONMENT
          value: "production"
        - name: PUBLIC_USE_LOCAL_BACKEND
          value: "false"
        - name: CORS_ORIGINS
          value: "https://your-domain.com,http://localhost:3000,http://localhost:4321"
        
        resources:
          limits:
            cpu: 2000m
            memory: 4Gi
          requests:
            cpu: 1000m
            memory: 2Gi
        
        startupProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 10
          timeoutSeconds: 5
          periodSeconds: 10
          failureThreshold: 3
        
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 30
          timeoutSeconds: 5
          periodSeconds: 30 
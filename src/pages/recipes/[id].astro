---
import Layout from '../../layouts/Layout.astro';
import RecipeDetailPageWithErrorBoundary from '../../components/RecipeDetailPageWithErrorBoundary';
import ToastProvider from '../../components/ToastProvider';
import ClientTest from '../../components/ClientTest';
import RecipeTestSimple from '../../components/RecipeTestSimple';
import RecipeTestWithHook from '../../components/RecipeTestWithHook';
import RecipeTestWithAuth from '../../components/RecipeTestWithAuth';
import RecipeTestMinimal from '../../components/RecipeTestMinimal';

const { id } = Astro.params;

// Validate that ID is provided and is a valid UUID format
if (!id) {
  return Astro.redirect('/404');
}

// Basic UUID validation (format check)
const uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;
if (!uuidRegex.test(id)) {
  return Astro.redirect('/404');
}

// Set page title for SEO
const title = `Szczegóły przepisu - Na Winie`;
const description = `Sprawdź szczegóły przepisu, składniki i sposób przygotowania.`;
---

<Layout title={title}>
  <main>
    <ClientTest client:load />
    
    <RecipeTestSimple recipeId={id} client:load />
    
    <RecipeTestWithHook recipeId={id} client:load />
    
    <RecipeTestWithAuth recipeId={id} client:load />
    
    <RecipeTestMinimal recipeId={id} client:load />
    
    <!-- Now testing the original complex component -->
    <ToastProvider client:load>
      <RecipeDetailPageWithErrorBoundary recipeId={id} client:load />
    </ToastProvider>
  </main>
</Layout>

<style>
  main {
    min-height: 100vh;
    background-color: #f8fafc;
  }
</style> 